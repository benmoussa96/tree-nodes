{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/node/node.service\";\nimport * as i2 from \"@angular/material/icon\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/list\";\nimport * as i5 from \"@angular/material/core\";\n\nfunction NodesComponent_mat_list_3_mat_list_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function NodesComponent_mat_list_3_mat_list_item_1_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const node_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.modify(node_r3.id);\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function NodesComponent_mat_list_3_mat_list_item_1_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const node_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.delete(node_r3.id);\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 3);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", node_r3.id, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"\", node_r3.name, \" \");\n  }\n}\n\nfunction NodesComponent_mat_list_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list\");\n    i0.ɵɵtemplate(1, NodesComponent_mat_list_3_mat_list_item_1_Template, 11, 2, \"mat-list-item\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const nodes_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", nodes_r1);\n  }\n}\n\nexport let NodesComponent = /*#__PURE__*/(() => {\n  class NodesComponent {\n    constructor(service) {\n      this.service = service;\n\n      this.getAllNodes = () => {\n        this.nodes$ = this.service.getAllNodes();\n      };\n    }\n\n    ngOnInit() {\n      console.log('====>>', this.nodes$);\n      this.getAllNodes();\n    }\n\n    add() {\n      const newNode = {\n        id: null,\n        name: 'New Node'\n      };\n      this.service.createNode(newNode);\n    }\n\n    modify(id) {\n      const updatedNode = {\n        id,\n        name: 'Modified Node'\n      };\n      this.service.modifyNode(updatedNode);\n    }\n\n    delete(id) {\n      this.service.deleteNode(id).subscribe(this.getAllNodes);\n    }\n\n  }\n\n  NodesComponent.ɵfac = function NodesComponent_Factory(t) {\n    return new (t || NodesComponent)(i0.ɵɵdirectiveInject(i1.NodeService));\n  };\n\n  NodesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NodesComponent,\n    selectors: [[\"app-nodes\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[\"mat-mini-fab\", \"\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-line\", \"\"]],\n    template: function NodesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function NodesComponent_Template_button_click_0_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵelementStart(1, \"mat-icon\");\n        i0.ɵɵtext(2, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, NodesComponent_mat_list_3_Template, 2, 1, \"mat-list\", 1);\n        i0.ɵɵpipe(4, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 1, ctx.nodes$));\n      }\n    },\n    directives: [i2.MatIcon, i3.NgIf, i4.MatList, i3.NgForOf, i4.MatListItem, i5.MatLine],\n    pipes: [i3.AsyncPipe],\n    styles: [\"\"]\n  });\n  return NodesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}